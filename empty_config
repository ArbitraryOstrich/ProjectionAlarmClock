// Time Keeping for loops
int polling_rate = 5000;
int send_info_rate = 10000;
unsigned long currentMillis = 0;
unsigned long last_poll_Millis = 0;
unsigned long last_info_Millis = 0;

WiFiUDP ntpUDP;
// timezone offset in seconds, updateInterval in ms
NTPClient timeClient(ntpUDP, "", -18000, 60000);


// i2c
#define i2c_clock 22
#define i2c_data 21
#define i2c_reset 19
// Wifi Stuff
char *ssid = "";
const char *password = "";
char ip_char[15];
WiFiClient espClient;
// MQTT Config
const char *mqttServerIp = "";
const short mqttServerPort = 1883;
const char *mqttUsername = "";
const char *mqttPassword = "";
// Only change ClientName
#define ClientName "sunroom_temp_clock"
/// the following topics are generated by preprocessor using the client name
const char *mqttClientName = ClientName;
const char *json_data_topic = ClientName "/json";
const char *mqtt_log_topic = ClientName "/logs";
const char *mqtt_response_topic = ClientName "/response";
const char *mqtt_command_topic = ClientName "/command";
const char *mqtt_info_topic = ClientName "/info";
const char *willTopic = ClientName "/status";
/// You can modify after this
const char *willMessage = "Offline";

int mqtt_failed_connection_attempts = 0;
int willQoS = 1;
boolean willRetain = 1;
PubSubClient mqtt_client(espClient);
bool wasConnected = 0;



/*Screen stuff */
U8G2_SSD1309_128X64_NONAME2_1_HW_I2C u8g2(U8G2_R0, i2c_reset, i2c_clock, i2c_data);

//const int SCREEN_WIDTH = 128;
#define LCDWidth                        u8g2.getDisplayWidth()
#define ALIGN_CENTER(t)                 ((LCDWidth - (u8g2.getUTF8Width(t))) / 2)
